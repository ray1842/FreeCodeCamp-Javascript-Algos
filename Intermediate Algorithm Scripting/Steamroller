/*Flatten a nested array. You must account for varying levels of nesting.

For example:

steamrollArray([[["a"]], [["b"]]]) should return ["a", "b"].
steamrollArray([1, [2], [3, [[4]]]]) should return [1, 2, 3, 4].
steamrollArray([1, [], [3, [[4]]]]) should return [1, 3, 4].
steamrollArray([1, {}, [3, [[4]]]]) should return [1, {}, 3, 4].
Your solution should not use the Array.prototype.flat() or Array.prototype.flatMap() methods.
*/

function steamrollArray(arr) {
  var nonArray=[];
  var realArray=[];
  var finalArr=[];
  for(var i=0;i<arr.length;i++){
    if(Array.isArray(arr[i])==false){
      nonArray.push(arr[i]);
    }else if(Array.isArray(arr[i])==true){
      realArray.push(arr[i]);
    }
  }
  var realArray=realArray.join();
  for(var j=0;j<realArray.length;j++){
    let regex=new RegExp(/\w/,"ig");
    let test=regex.test(realArray[j]);
      if(test==true){
        finalArr.push(realArray[j])
      }
    }
    var realArray=[];
    for(var k=0;k<finalArr.length;k++){
      let digitRegex=new RegExp(/\d/,"ig");
      let digitTest=digitRegex.test(finalArr);
      if(digitTest==true){
        realArray.push(parseInt(finalArr[k]));
      }else{
        return finalArr;
      }
    }
  return finalArr=nonArray.concat(realArray);
 
}
console.log(steamrollArray([[["a"]], [["b"]]]));
